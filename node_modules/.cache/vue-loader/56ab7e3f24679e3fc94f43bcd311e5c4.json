{"remainingRequest":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\src\\App.vue","mtime":1607998312283},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606873257823},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1606873257806},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606873257823},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1606873275494}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgICBpbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJwoKICAgIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgICBuYW1lOiAiQXBwIiwKCiAgICAgICAgY29tcG9uZW50czoge30sCgogICAgICAgIG1vdW50ZWQoKSB7CiAgICAgICAgICAgIHRoaXMuZmV0Y2hDaXRpZXMoKTsKICAgICAgICB9LAoKICAgICAgICBkYXRhOiAoKSA9PiAoewogICAgICAgICAgICBtb2RlbDogMCwKICAgICAgICAgICAgY2l0aWVzOiBbIkJhcnJpZSJdLAogICAgICAgICAgICBkcmF3ZXI6IGZhbHNlLAogICAgICAgICAgICBncm91cDogbnVsbCwKICAgICAgICAgICAgd2VhdGhlcjoge30KICAgICAgICB9KSwKCiAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICBmZXRjaENpdGllcygpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2l0aWVzID0gWyJCYXJyaWUiLCAiQW50YXJjdGljYSIsICJNb250ZWdvIEJheSIsICJMb25kb24iLCAiSmVydXNhbGVtIl07CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBnZXRSYW5kb21JbnQobWF4ID0gMTI4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5mbG9vcihtYXgpKQogICAgICAgICAgICB9LAoKICAgICAgICAgICAgZ2V0UmFuZG9tQ29sb3VyKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGByZ2IoJHt0aGlzLmdldFJhbmRvbUludCgpfSwgJHt0aGlzLmdldFJhbmRvbUludCgpfSwgJHt0aGlzLmdldFJhbmRvbUludCgpfSlgCiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKCiAgICAgICAgY29tcHV0ZWQ6IHsKICAgICAgICAgICAgY3VycmVudENpdHkoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53ZWF0aGVyPy5uYW1lOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgdGl0bGUoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53ZWF0aGVyPy53ZWF0aGVyPy5zdW1tYXJ5Py50aXRsZTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGFjdHVhbCgpIHsKICAgICAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy53ZWF0aGVyPy53ZWF0aGVyPy50ZW1wZXJhdHVyZT8uYWN0dWFsOwogICAgICAgICAgICAgICAgcmV0dXJuIHRlbXAgPyBNYXRoLnJvdW5kKHRlbXApIDogIi0iOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgaWNvbigpIHsKICAgICAgICAgICAgICBjb25zdCBpY29uQ29kZSA9IHRoaXMud2VhdGhlcj8ud2VhdGhlcj8uc3VtbWFyeT8uaWNvbjsKICAgICAgICAgICAgICAgIHJldHVybiBpY29uQ29kZSA/IGBodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29uQ29kZX1ANHgucG5nYCA6ICIiOwogICAgICAgICAgICB9CgogICAgICAgIH0sCgogICAgICAgIGFwb2xsbzogewogICAgICAgICAgICB3ZWF0aGVyOiB7CiAgICAgICAgICAgICAgICBxdWVyeTogZ3FsYAogICAgICAgICAgICBxdWVyeSBnZXRXZWF0aGVyKCRjaXR5OiBTdHJpbmchKSB7CndlYXRoZXI6IGdldENpdHlCeU5hbWUobmFtZTogJGNpdHksIGNvbmZpZzogeyB1bml0czogbWV0cmljIH0pIHsKICAgICAgICBuYW1lCiAgICAgICAgd2VhdGhlciB7CiAgICAgICAgICAgc3VtbWFyeSB7CiAgICAgICAgICAgICAgdGl0bGUKICAgICAgICAgICAgICBpY29uCiAgICAgICAgICAgICAgfQogICAgICAgIHRlbXBlcmF0dXJlIHsKICAgICAgICBhY3R1YWwKICAgICAgICB9CiAgICAgICAgfQogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgICAgIGAsCiAgICAgICAgICAgICAgICB2YXJpYWJsZXMoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2l0eTogdGhpcy5jaXRpZXNbdGhpcy5tb2RlbF0sCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0sCgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <v-app>\n        <v-app-bar app flat color=\"rgba(0, 0, 0, 0)\">\n            <v-app-bar-nav-icon color=\"white\" @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n            <v-toolbar-title class=\"title white--text pl-0\">\n                Messages\n            </v-toolbar-title>\n\n            <v-spacer></v-spacer>\n\n            <v-btn color=\"white\" icon>\n                <v-icon>mdi-magnify</v-icon>\n            </v-btn>\n        </v-app-bar>\n\n        <v-navigation-drawer\n                v-model=\"drawer\"\n                absolute\n                temporary\n        >\n            <v-list\n                    nav\n                    dense\n            >\n                <v-list-item-group\n                        v-model=\"group\"\n                        active-class=\"deep-purple--text text--accent-4\"\n                >\n                    <v-list-item>\n                        <v-list-item-title>Foo</v-list-item-title>\n                    </v-list-item>\n\n                    <v-list-item>\n                        <v-list-item-title>Bar</v-list-item-title>\n                    </v-list-item>\n\n                    <v-list-item>\n                        <v-list-item-title>Fizz</v-list-item-title>\n                    </v-list-item>\n\n                    <v-list-item>\n                        <v-list-item-title>Buzz</v-list-item-title>\n                    </v-list-item>\n                </v-list-item-group>\n            </v-list>\n        </v-navigation-drawer>\n\n        <v-main style=\"margin-top: -57px;\">\n            <v-carousel v-model=\"model\" height=\"100vh\" :show-arrows=\"false\">\n                <v-carousel-item v-for=\"city in cities\" :key=\"city\">\n                    <v-sheet :color=\"getRandomColour()\" height=\"100%\" tile>\n                        <v-row class=\"fill-height\" align=\"center\" justify=\"center\">\n                            <div class=\"d-flex flex-column\">\n                                <v-card-text>\n                                    <h1 class=\"text-h3\" align=\"center\">{{ currentCity }}</h1>\n                                    <p class=\"text-h6\" align=\"center\">{{ title }}</p>\n                                    <div align=\"center\">\n                                        <img :src=\"icon\" alt=\"\">\n                                    </div>\n                                    <p class=\"text-h1\" align=\"center\">{{ actual }}</p>\n                                </v-card-text>\n                            </div>\n                        </v-row>\n                    </v-sheet>\n                </v-carousel-item>\n            </v-carousel>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\n    import gql from 'graphql-tag'\n\n    export default {\n        name: \"App\",\n\n        components: {},\n\n        mounted() {\n            this.fetchCities();\n        },\n\n        data: () => ({\n            model: 0,\n            cities: [\"Barrie\"],\n            drawer: false,\n            group: null,\n            weather: {}\n        }),\n\n        methods: {\n            fetchCities() {\n                this.cities = [\"Barrie\", \"Antarctica\", \"Montego Bay\", \"London\", \"Jerusalem\"];\n            },\n\n            getRandomInt(max = 128) {\n                return Math.floor(Math.random() * Math.floor(max))\n            },\n\n            getRandomColour() {\n                return `rgb(${this.getRandomInt()}, ${this.getRandomInt()}, ${this.getRandomInt()})`\n            }\n\n        },\n\n        computed: {\n            currentCity() {\n                return this.weather?.name;\n            },\n\n            title() {\n                return this.weather?.weather?.summary?.title;\n            },\n\n            actual() {\n              const temp = this.weather?.weather?.temperature?.actual;\n                return temp ? Math.round(temp) : \"-\";\n            },\n\n            icon() {\n              const iconCode = this.weather?.weather?.summary?.icon;\n                return iconCode ? `https://openweathermap.org/img/wn/${iconCode}@4x.png` : \"\";\n            }\n\n        },\n\n        apollo: {\n            weather: {\n                query: gql`\n            query getWeather($city: String!) {\nweather: getCityByName(name: $city, config: { units: metric }) {\n        name\n        weather {\n           summary {\n              title\n              icon\n              }\n        temperature {\n        actual\n        }\n        }\n        }\n        }\n            `,\n                variables() {\n                    return {\n                        city: this.cities[this.model],\n                    };\n                },\n\n            }\n        }\n    }\n</script>\n"]}]}