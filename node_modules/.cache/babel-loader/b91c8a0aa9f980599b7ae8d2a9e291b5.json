{"remainingRequest":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\src\\vue-apollo.js","dependencies":[{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\src\\vue-apollo.js","mtime":1607968031652},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606873257823},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1606873257806},{"path":"C:\\develop\\Georgian_Lab_12_4_Weather_App\\weather-app\\node_modules\\eslint-loader\\index.js","mtime":1606873271874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovZGV2ZWxvcC9HZW9yZ2lhbl9MYWJfMTJfNF9XZWF0aGVyX0FwcC93ZWF0aGVyLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L2RldmVsb3AvR2VvcmdpYW5fTGFiXzEyXzRfV2VhdGhlcl9BcHAvd2VhdGhlci1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCBWdWVBcG9sbG8gZnJvbSAidnVlLWFwb2xsbyI7CmltcG9ydCB7IGNyZWF0ZUFwb2xsb0NsaWVudCwgcmVzdGFydFdlYnNvY2tldHMgfSBmcm9tICJ2dWUtY2xpLXBsdWdpbi1hcG9sbG8vZ3JhcGhxbC1jbGllbnQiOyAvLyBJbnN0YWxsIHRoZSB2dWUgcGx1Z2luCgpWdWUudXNlKFZ1ZUFwb2xsbyk7IC8vIE5hbWUgb2YgdGhlIGxvY2FsU3RvcmFnZSBpdGVtCgp2YXIgQVVUSF9UT0tFTiA9ICJhcG9sbG8tdG9rZW4iOyAvLyBIdHRwIGVuZHBvaW50Cgp2YXIgaHR0cEVuZHBvaW50ID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9HUkFQSFFMX0hUVFAgfHwgImh0dHBzOi8vZ3JhcGhxbC13ZWF0aGVyLWFwaS5oZXJva3VhcHAuY29tLyI7IC8vIENvbmZpZwoKdmFyIGRlZmF1bHRPcHRpb25zID0gewogIC8vIFlvdSBjYW4gdXNlIGBodHRwc2AgZm9yIHNlY3VyZSBjb25uZWN0aW9uIChyZWNvbW1lbmRlZCBpbiBwcm9kdWN0aW9uKQogIGh0dHBFbmRwb2ludDogaHR0cEVuZHBvaW50LAogIC8vIFlvdSBjYW4gdXNlIGB3c3NgIGZvciBzZWN1cmUgY29ubmVjdGlvbiAocmVjb21tZW5kZWQgaW4gcHJvZHVjdGlvbikKICAvLyBVc2UgYG51bGxgIHRvIGRpc2FibGUgc3Vic2NyaXB0aW9ucwogIHdzRW5kcG9pbnQ6IG51bGwsCiAgLy8gTG9jYWxTdG9yYWdlIHRva2VuCiAgdG9rZW5OYW1lOiBBVVRIX1RPS0VOLAogIC8vIEVuYWJsZSBBdXRvbWF0aWMgUXVlcnkgcGVyc2lzdGluZyB3aXRoIEFwb2xsbyBFbmdpbmUKICBwZXJzaXN0aW5nOiBmYWxzZSwKICAvLyBVc2Ugd2Vic29ja2V0cyBmb3IgZXZlcnl0aGluZyAobm8gSFRUUCkKICAvLyBZb3UgbmVlZCB0byBwYXNzIGEgYHdzRW5kcG9pbnRgIGZvciB0aGlzIHRvIHdvcmsKICB3ZWJzb2NrZXRzT25seTogZmFsc2UsCiAgLy8gSXMgYmVpbmcgcmVuZGVyZWQgb24gdGhlIHNlcnZlcj8KICBzc3I6IGZhbHNlIC8vIE92ZXJyaWRlIGRlZmF1bHQgYXBvbGxvIGxpbmsKICAvLyBub3RlOiBkb24ndCBvdmVycmlkZSBodHRwTGluayBoZXJlLCBzcGVjaWZ5IGh0dHBMaW5rIG9wdGlvbnMgaW4gdGhlCiAgLy8gaHR0cExpbmtPcHRpb25zIHByb3BlcnR5IG9mIGRlZmF1bHRPcHRpb25zLgogIC8vIGxpbms6IG15TGluawogIC8vIE92ZXJyaWRlIGRlZmF1bHQgY2FjaGUKICAvLyBjYWNoZTogbXlDYWNoZQogIC8vIE92ZXJyaWRlIHRoZSB3YXkgdGhlIEF1dGhvcml6YXRpb24gaGVhZGVyIGlzIHNldAogIC8vIGdldEF1dGg6ICh0b2tlbk5hbWUpID0+IC4uLgogIC8vIEFkZGl0aW9uYWwgQXBvbGxvQ2xpZW50IG9wdGlvbnMKICAvLyBhcG9sbG86IHsgLi4uIH0KICAvLyBDbGllbnQgbG9jYWwgZGF0YSAoc2VlIGFwb2xsby1saW5rLXN0YXRlKQogIC8vIGNsaWVudFN0YXRlOiB7IHJlc29sdmVyczogeyAuLi4gfSwgZGVmYXVsdHM6IHsgLi4uIH0gfQoKfTsgLy8gQ2FsbCB0aGlzIGluIHRoZSBWdWUgYXBwIGZpbGUKCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm92aWRlcigpIHsKICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CgogIC8vIENyZWF0ZSBhcG9sbG8gY2xpZW50CiAgdmFyIF9jcmVhdGVBcG9sbG9DbGllbnQgPSBjcmVhdGVBcG9sbG9DbGllbnQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBkZWZhdWx0T3B0aW9ucyksIG9wdGlvbnMpKSwKICAgICAgYXBvbGxvQ2xpZW50ID0gX2NyZWF0ZUFwb2xsb0NsaWVudC5hcG9sbG9DbGllbnQsCiAgICAgIHdzQ2xpZW50ID0gX2NyZWF0ZUFwb2xsb0NsaWVudC53c0NsaWVudDsKCiAgYXBvbGxvQ2xpZW50LndzQ2xpZW50ID0gd3NDbGllbnQ7IC8vIENyZWF0ZSB2dWUgYXBvbGxvIHByb3ZpZGVyCgogIHZhciBhcG9sbG9Qcm92aWRlciA9IG5ldyBWdWVBcG9sbG8oewogICAgZGVmYXVsdENsaWVudDogYXBvbGxvQ2xpZW50LAogICAgZGVmYXVsdE9wdGlvbnM6IHsKICAgICAgJHF1ZXJ5OiB7Ly8gZmV0Y2hQb2xpY3k6ICdjYWNoZS1hbmQtbmV0d29yaycsCiAgICAgIH0KICAgIH0sCiAgICBlcnJvckhhbmRsZXI6IGZ1bmN0aW9uIGVycm9ySGFuZGxlcihlcnJvcikgewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICBjb25zb2xlLmxvZygiJWNFcnJvciIsICJiYWNrZ3JvdW5kOiByZWQ7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMnB4IDRweDsgYm9yZGVyLXJhZGl1czogM3B4OyBmb250LXdlaWdodDogYm9sZDsiLCBlcnJvci5tZXNzYWdlKTsKICAgIH0KICB9KTsKICByZXR1cm4gYXBvbGxvUHJvdmlkZXI7Cn0gLy8gTWFudWFsbHkgY2FsbCB0aGlzIHdoZW4gdXNlciBsb2cgaW4KCmV4cG9ydCBmdW5jdGlvbiBvbkxvZ2luKF94LCBfeDIpIHsKICByZXR1cm4gX29uTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyBNYW51YWxseSBjYWxsIHRoaXMgd2hlbiB1c2VyIGxvZyBvdXQKCmZ1bmN0aW9uIF9vbkxvZ2luKCkgewogIF9vbkxvZ2luID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGFwb2xsb0NsaWVudCwgdG9rZW4pIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKHR5cGVvZiBsb2NhbFN0b3JhZ2UgIT09ICJ1bmRlZmluZWQiICYmIHRva2VuKSB7CiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oQVVUSF9UT0tFTiwgdG9rZW4pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoYXBvbGxvQ2xpZW50LndzQ2xpZW50KSByZXN0YXJ0V2Vic29ja2V0cyhhcG9sbG9DbGllbnQud3NDbGllbnQpOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBhcG9sbG9DbGllbnQucmVzZXRTdG9yZSgpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLmxvZygiJWNFcnJvciBvbiBjYWNoZSByZXNldCAobG9naW4pIiwgImNvbG9yOiBvcmFuZ2U7IiwgX2NvbnRleHQudDAubWVzc2FnZSk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDddXSk7CiAgfSkpOwogIHJldHVybiBfb25Mb2dpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gb25Mb2dvdXQoX3gzKSB7CiAgcmV0dXJuIF9vbkxvZ291dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfb25Mb2dvdXQoKSB7CiAgX29uTG9nb3V0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihhcG9sbG9DbGllbnQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKEFVVEhfVE9LRU4pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoYXBvbGxvQ2xpZW50LndzQ2xpZW50KSByZXN0YXJ0V2Vic29ja2V0cyhhcG9sbG9DbGllbnQud3NDbGllbnQpOwogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDI7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGFwb2xsb0NsaWVudC5yZXNldFN0b3JlKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDIpOwogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLmxvZygiJWNFcnJvciBvbiBjYWNoZSByZXNldCAobG9nb3V0KSIsICJjb2xvcjogb3JhbmdlOyIsIF9jb250ZXh0Mi50MC5tZXNzYWdlKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1syLCA3XV0pOwogIH0pKTsKICByZXR1cm4gX29uTG9nb3V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["C:/develop/Georgian_Lab_12_4_Weather_App/weather-app/src/vue-apollo.js"],"names":["Vue","VueApollo","createApolloClient","restartWebsockets","use","AUTH_TOKEN","httpEndpoint","process","env","VUE_APP_GRAPHQL_HTTP","defaultOptions","wsEndpoint","tokenName","persisting","websocketsOnly","ssr","createProvider","options","apolloClient","wsClient","apolloProvider","defaultClient","$query","errorHandler","error","console","log","message","onLogin","token","localStorage","setItem","resetStore","onLogout","removeItem"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,kBADF,EAEEC,iBAFF,QAGO,sCAHP,C,CAKA;;AACAH,GAAG,CAACI,GAAJ,CAAQH,SAAR,E,CAEA;;AACA,IAAMI,UAAU,GAAG,cAAnB,C,CAEA;;AACA,IAAMC,YAAY,GAChBC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,IAAoC,4CADtC,C,CAGA;;AACA,IAAMC,cAAc,GAAG;AACrB;AACAJ,EAAAA,YAAY,EAAZA,YAFqB;AAGrB;AACA;AACAK,EAAAA,UAAU,EAAE,IALS;AAMrB;AACAC,EAAAA,SAAS,EAAEP,UAPU;AAQrB;AACAQ,EAAAA,UAAU,EAAE,KATS;AAUrB;AACA;AACAC,EAAAA,cAAc,EAAE,KAZK;AAarB;AACAC,EAAAA,GAAG,EAAE,KAdgB,CAgBrB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AA/BqB,CAAvB,C,CAkCA;;AACA,OAAO,SAASC,cAAT,GAAsC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC3C;AAD2C,4BAERf,kBAAkB,iCAChDQ,cADgD,GAEhDO,OAFgD,EAFV;AAAA,MAEnCC,YAFmC,uBAEnCA,YAFmC;AAAA,MAErBC,QAFqB,uBAErBA,QAFqB;;AAM3CD,EAAAA,YAAY,CAACC,QAAb,GAAwBA,QAAxB,CAN2C,CAQ3C;;AACA,MAAMC,cAAc,GAAG,IAAInB,SAAJ,CAAc;AACnCoB,IAAAA,aAAa,EAAEH,YADoB;AAEnCR,IAAAA,cAAc,EAAE;AACdY,MAAAA,MAAM,EAAE,CACN;AADM;AADM,KAFmB;AAOnCC,IAAAA,YAPmC,wBAOtBC,KAPsB,EAOf;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CACE,SADF,EAEE,yFAFF,EAGEF,KAAK,CAACG,OAHR;AAKD;AAdkC,GAAd,CAAvB;AAiBA,SAAOP,cAAP;AACD,C,CAED;;AACA,gBAAsBQ,OAAtB;AAAA;AAAA,C,CAaA;;;qEAbO,iBAAuBV,YAAvB,EAAqCW,KAArC;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI,OAAOC,YAAP,KAAwB,WAAxB,IAAuCD,KAA3C,EAAkD;AAChDC,cAAAA,YAAY,CAACC,OAAb,CAAqB1B,UAArB,EAAiCwB,KAAjC;AACD;;AACD,gBAAIX,YAAY,CAACC,QAAjB,EAA2BhB,iBAAiB,CAACe,YAAY,CAACC,QAAd,CAAjB;AAJtB;AAAA;AAAA,mBAMGD,YAAY,CAACc,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,gBAA9C,EAAgE,YAAEC,OAAlE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcP,gBAAsBM,QAAtB;AAAA;AAAA;;;sEAAO,kBAAwBf,YAAxB;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI,OAAOY,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,cAAAA,YAAY,CAACI,UAAb,CAAwB7B,UAAxB;AACD;;AACD,gBAAIa,YAAY,CAACC,QAAjB,EAA2BhB,iBAAiB,CAACe,YAAY,CAACC,QAAd,CAAjB;AAJtB;AAAA;AAAA,mBAMGD,YAAY,CAACc,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,gBAA/C,EAAiE,aAAEC,OAAnE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Vue from \"vue\";\nimport VueApollo from \"vue-apollo\";\nimport {\n  createApolloClient,\n  restartWebsockets\n} from \"vue-cli-plugin-apollo/graphql-client\";\n\n// Install the vue plugin\nVue.use(VueApollo);\n\n// Name of the localStorage item\nconst AUTH_TOKEN = \"apollo-token\";\n\n// Http endpoint\nconst httpEndpoint =\n  process.env.VUE_APP_GRAPHQL_HTTP || \"https://graphql-weather-api.herokuapp.com/\";\n\n// Config\nconst defaultOptions = {\n  // You can use `https` for secure connection (recommended in production)\n  httpEndpoint,\n  // You can use `wss` for secure connection (recommended in production)\n  // Use `null` to disable subscriptions\n  wsEndpoint: null,\n  // LocalStorage token\n  tokenName: AUTH_TOKEN,\n  // Enable Automatic Query persisting with Apollo Engine\n  persisting: false,\n  // Use websockets for everything (no HTTP)\n  // You need to pass a `wsEndpoint` for this to work\n  websocketsOnly: false,\n  // Is being rendered on the server?\n  ssr: false\n\n  // Override default apollo link\n  // note: don't override httpLink here, specify httpLink options in the\n  // httpLinkOptions property of defaultOptions.\n  // link: myLink\n\n  // Override default cache\n  // cache: myCache\n\n  // Override the way the Authorization header is set\n  // getAuth: (tokenName) => ...\n\n  // Additional ApolloClient options\n  // apollo: { ... }\n\n  // Client local data (see apollo-link-state)\n  // clientState: { resolvers: { ... }, defaults: { ... } }\n};\n\n// Call this in the Vue app file\nexport function createProvider(options = {}) {\n  // Create apollo client\n  const { apolloClient, wsClient } = createApolloClient({\n    ...defaultOptions,\n    ...options\n  });\n  apolloClient.wsClient = wsClient;\n\n  // Create vue apollo provider\n  const apolloProvider = new VueApollo({\n    defaultClient: apolloClient,\n    defaultOptions: {\n      $query: {\n        // fetchPolicy: 'cache-and-network',\n      }\n    },\n    errorHandler(error) {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"%cError\",\n        \"background: red; color: white; padding: 2px 4px; border-radius: 3px; font-weight: bold;\",\n        error.message\n      );\n    }\n  });\n\n  return apolloProvider;\n}\n\n// Manually call this when user log in\nexport async function onLogin(apolloClient, token) {\n  if (typeof localStorage !== \"undefined\" && token) {\n    localStorage.setItem(AUTH_TOKEN, token);\n  }\n  if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient);\n  try {\n    await apolloClient.resetStore();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(\"%cError on cache reset (login)\", \"color: orange;\", e.message);\n  }\n}\n\n// Manually call this when user log out\nexport async function onLogout(apolloClient) {\n  if (typeof localStorage !== \"undefined\") {\n    localStorage.removeItem(AUTH_TOKEN);\n  }\n  if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient);\n  try {\n    await apolloClient.resetStore();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(\"%cError on cache reset (logout)\", \"color: orange;\", e.message);\n  }\n}\n"]}]}